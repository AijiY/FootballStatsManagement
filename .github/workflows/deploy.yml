name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  EC2_USER: 'ec2-user'
  BASTION_HOST: '18.183.70.83' # EC2再起動時は変更
  PRIVATE_HOST: ${{ secrets.AWS_PRIVATE_HOST }}
  SRC_PATH: 'build/libs/*.jar'
  DST_PATH: '/home/ec2-user/app.jar'

jobs:
  deploy:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Run tests
      run: ./gradlew test

    - name: Upload Test Report
      if: failure()  # テストが失敗した場合のみ実行
      uses: actions/upload-artifact@v3
      with:
        name: test-report  # アーティファクトの名前
        path: build/reports/tests/test/  # アップロードするファイルやディレクトリ

    - name: Build with Gradle Wrapper
      run: ./gradlew bootJar

    - name: SCP Copy Application to PRIVATE EC2 through Bastion
      env:
        PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -o ProxyCommand="ssh -W %h:%p -i private_key -o StrictHostKeyChecking=no ec2-user@$BASTION_HOST" -i private_key $SRC_PATH $EC2_USER@$PRIVATE_HOST:$DST_PATH

    - name: SSH Application Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.PRIVATE_HOST }}
        username: ${{ env.EC2_USER }}
        ey: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        envs: DST_PATH
        script: |
#          sudo yum update -y
          if [ -f /etc/system/StatsManagement.service ]; then
            echo "Service already exists"
          else
          cat <<EOL | sudo tee -a /etc/systemd/system/StatsManagement.service
          [Unit]
          Description = StatsManagement App
          [Service]
          ExecStart = java -jar ${DST_PATH}
          EnvironmentFile = /etc/sysconfig/StatsManagement
          Restart = no
          Type = simple
          User = ec2-user
          Group = ec2-user
          SuccessExitStatus = 143
          
          [Install]
          WantedBy = multi-user.target
          EOL
          fi
          
          sudo systemctl daemon-reload
          if sudo systemctl status StatsManagement 2>&1 | grep "Active: active (running)"; then
            sudo systemctl restart StatsManagement
          else
            sudo systemctl start StatsManagement
          fi
